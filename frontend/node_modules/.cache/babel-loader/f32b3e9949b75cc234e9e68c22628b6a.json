{"ast":null,"code":"var _jsxFileName = \"D:\\\\udemy\\\\Suppee\\\\frontend\\\\src\\\\screens\\\\OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { Link, useParams, useNavigate, Redirect } from \"react-router-dom\";\nimport { Button, Row, Col, ListGroup, Card, Image, Spinner } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { deliverOrder, getOrderDetails, payOrder, payOrderMidtrans, updatePayOrderMidtrans } from \"../actions/orderActions\";\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET, ORDER_DETAILS_RESET } from \"../constants/orderConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderScreen = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const match = useParams();\n  const orderId = match.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = orderPay;\n  const orderDeliver = useSelector(state => state.orderDeliver);\n  const {\n    loading: loadingDeliver,\n    success: successDeliver\n  } = orderDeliver;\n  const orderMidtrans = useSelector(state => state.orderMidtrans);\n  const {\n    loading: loadingPayMidtrans,\n    success: successPayMidtrans,\n    order: orderPayMidtrans\n  } = orderMidtrans;\n\n  const addDecimals = num => {\n    return Math.round(num * 100) / 100;\n  };\n\n  if (!loading) {\n    order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      return history.push(\"/login\");\n    }\n\n    if (!order || order._id !== orderId) {\n      dispatch(getOrderDetails(orderId));\n    } // eslint-disable-next-line\n\n  }, [order, orderId, userInfo, history]);\n  useEffect(() => {\n    if (!order || successPay || successDeliver) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch({\n        type: ORDER_DELIVER_RESET\n      });\n      dispatch({\n        type: ORDER_DETAILS_RESET\n      });\n      dispatch(getOrderDetails(orderId));\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver]);\n  useEffect(() => {\n    const ajaxGetToken = (transactionData, callback) => {\n      var snapToken; // Request get token to your server & save result to snapToken variable\n\n      snapToken = orderPayMidtrans.token;\n\n      if (snapToken) {\n        callback(null, snapToken);\n      } else {\n        callback(new Error(\"Failed to fetch snap token\"), null);\n      }\n    }; // const snap = window.snap;\n    // console.log(snap);\n    // snap.show()\n\n\n    if (successPayMidtrans) {\n      window.snap(ajaxGetToken({\n        \"order_id\": order._id,\n        \"gross_amount\": 50000\n      }, function (error, snapToken) {\n        console.log(\"sampe sini\");\n      }), {}); //   ajaxGetToken(\n      //     { \"order_id\": order._id, \"gross_amount\": 50000 },\n      //     function (error, snapToken) {\n      //       if (error) {\n      //         snap.hide();\n      //       } else {\n      //         snap.pay(snapToken, {\n      //           onSuccess: function (result) {\n      //             console.log(\"success\");\n      //             console.log(result);\n      //             return dispatch(updatePayOrderMidtrans(orderId, result));\n      //           },\n      //           onPending: function (result) {\n      //             console.log(\"pending\");\n      //             console.log(result);\n      //             return dispatch(updatePayOrderMidtrans(orderId, result));\n      //           },\n      //           onError: function (result) {\n      //             console.log(\"error\");\n      //             console.log(result);\n      //             return dispatch(updatePayOrderMidtrans(orderId, result));\n      //           },\n      //           onClose: function () {\n      //             console.log(\n      //               \"customer closed the popup without finishing the payment\"\n      //             );\n      //           },\n      //         });\n      //       }\n      //     }\n      //   );\n    }\n  }, [successPayMidtrans, orderPayMidtrans, order, dispatch, orderId]);\n\n  const successPaymentHandler = paymentResult => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(orderId));\n  };\n\n  const midtransHandler = () => {\n    // window.snap.pay('')\n    dispatch(payOrderMidtrans(orderId));\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Order \", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), \" \", order.user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `mailto:${order.user.email}`,\n                children: order.user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Address: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), order.shippingAddress.address, \" \", order.shippingAddress.city, \",\", \" \", order.shippingAddress.postalCode, \",\", \" \", order.shippingAddress.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Delivered on \", order.deliveredAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: \"Not Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Method: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this), order.paymentMethod]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Paid on \", order.paidAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n              children: \"Order is empty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: order.orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 2,\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: item.image,\n                      alt: item.name,\n                      fluid: true,\n                      rounded: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/product/${item.product}`,\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: [item.qty, \" x $\", item.price, \" = $\", item.qty * item.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Order Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.itemsPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Shipping\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.shippingPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.taxPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.totalPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), !order.isPaid && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: midtransHandler,\n                children: \"MIDTRANS PAY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 41\n            }, this), loadingDeliver && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 48\n            }, this), userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"d-grid\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                className: \"btn btn-block\",\n                onClick: deliverHandler,\n                children: \"Mark As Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderScreen, \"FAoV49x1JEHFxCX1/9D/zprWUGQ=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["D:/udemy/Suppee/frontend/src/screens/OrderScreen.js"],"names":["React","useEffect","useState","axios","PayPalButton","Link","useParams","useNavigate","Redirect","Button","Row","Col","ListGroup","Card","Image","Spinner","useDispatch","useSelector","Message","Loader","deliverOrder","getOrderDetails","payOrder","payOrderMidtrans","updatePayOrderMidtrans","ORDER_PAY_RESET","ORDER_DELIVER_RESET","ORDER_DETAILS_RESET","OrderScreen","history","dispatch","navigate","match","orderId","id","sdkReady","setSdkReady","userLogin","state","userInfo","orderDetails","order","loading","error","orderPay","loadingPay","success","successPay","orderDeliver","loadingDeliver","successDeliver","orderMidtrans","loadingPayMidtrans","successPayMidtrans","orderPayMidtrans","addDecimals","num","Math","round","itemsPrice","orderItems","reduce","acc","item","price","qty","push","_id","type","ajaxGetToken","transactionData","callback","snapToken","token","Error","window","snap","console","log","successPaymentHandler","paymentResult","deliverHandler","midtransHandler","user","name","email","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","isPaid","paidAt","length","map","index","image","product","shippingPrice","taxPrice","totalPrice","isAdmin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link, useParams, useNavigate, Redirect } from \"react-router-dom\";\r\nimport {\r\n    Button,\r\n    Row,\r\n    Col,\r\n    ListGroup,\r\n    Card,\r\n    Image,\r\n    Spinner,\r\n  } from \"react-bootstrap\";import { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n    deliverOrder,\r\n    getOrderDetails,\r\n    payOrder,\r\n    payOrderMidtrans,\r\n    updatePayOrderMidtrans,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n    ORDER_PAY_RESET,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_DETAILS_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const match = useParams();\r\n    const orderId = match.id;\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const orderPay = useSelector((state) => state.orderPay);\r\n    const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver);\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n    const orderMidtrans = useSelector((state) => state.orderMidtrans);\r\n    const {\r\n      loading: loadingPayMidtrans,\r\n      success: successPayMidtrans,\r\n      order: orderPayMidtrans,\r\n    } = orderMidtrans;\r\n\r\n    const addDecimals = (num) => {\r\n        return Math.round(num * 100) / 100;\r\n      };\r\n    \r\n    if (!loading) {\r\n        order.itemsPrice = addDecimals(\r\n          order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        );\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n          return history.push(\"/login\");\r\n        }\r\n        if (!order || order._id !== orderId) {\r\n          dispatch(getOrderDetails(orderId));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [order, orderId, userInfo, history]);\r\n    \r\n    useEffect(() => {\r\n        if (!order || successPay || successDeliver) {\r\n          dispatch({ type: ORDER_PAY_RESET });\r\n          dispatch({ type: ORDER_DELIVER_RESET });\r\n          dispatch({ type: ORDER_DETAILS_RESET });\r\n          dispatch(getOrderDetails(orderId));\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver]);\r\n    \r\n    useEffect(() => {\r\n        const ajaxGetToken = (transactionData, callback) => {\r\n          var snapToken;\r\n          // Request get token to your server & save result to snapToken variable\r\n          snapToken = orderPayMidtrans.token;\r\n    \r\n          if (snapToken) {\r\n            callback(null, snapToken);\r\n          } else {\r\n            callback(new Error(\"Failed to fetch snap token\"), null);\r\n          }\r\n        };\r\n    \r\n        // const snap = window.snap;\r\n        // console.log(snap);\r\n        // snap.show()\r\n        if (successPayMidtrans) {\r\n            window.snap(ajaxGetToken({ \"order_id\": order._id, \"gross_amount\": 50000 },\r\n                function (error, snapToken) {\r\n                console.log(\"sampe sini\")\r\n            }\r\n            ), {\r\n              \r\n          })\r\n        //   ajaxGetToken(\r\n        //     { \"order_id\": order._id, \"gross_amount\": 50000 },\r\n        //     function (error, snapToken) {\r\n        //       if (error) {\r\n        //         snap.hide();\r\n        //       } else {\r\n        //         snap.pay(snapToken, {\r\n        //           onSuccess: function (result) {\r\n        //             console.log(\"success\");\r\n        //             console.log(result);\r\n        //             return dispatch(updatePayOrderMidtrans(orderId, result));\r\n        //           },\r\n        //           onPending: function (result) {\r\n        //             console.log(\"pending\");\r\n        //             console.log(result);\r\n        //             return dispatch(updatePayOrderMidtrans(orderId, result));\r\n        //           },\r\n        //           onError: function (result) {\r\n        //             console.log(\"error\");\r\n        //             console.log(result);\r\n        //             return dispatch(updatePayOrderMidtrans(orderId, result));\r\n        //           },\r\n        //           onClose: function () {\r\n        //             console.log(\r\n        //               \"customer closed the popup without finishing the payment\"\r\n        //             );\r\n        //           },\r\n        //         });\r\n        //       }\r\n        //     }\r\n        //   );\r\n        }\r\n      }, [successPayMidtrans, orderPayMidtrans, order, dispatch, orderId]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(orderId, paymentResult));\r\n      };\r\n\r\n      const deliverHandler = () => {\r\n        dispatch(deliverOrder(orderId));\r\n      };\r\n    \r\n      const midtransHandler = () => {\r\n        // window.snap.pay('')\r\n        dispatch(payOrderMidtrans(orderId));\r\n      };\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n    ) : (\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong>\r\n                                <a href={`mailto:${order.user.email}`}>\r\n                                    {order.user.email}\r\n                                </a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address}{\" \"}\r\n                                {order.shippingAddress.city},{\" \"}\r\n                                {order.shippingAddress.postalCode},{\" \"}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant=\"success\">\r\n                                    Delivered on {order.deliveredAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant=\"danger\">\r\n                                    Not Delivered\r\n                                </Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant=\"success\">\r\n                                    Paid on {order.paidAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant=\"danger\">Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? (\r\n                                <Message>Order is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row className=\"align-items-center\">\r\n                                                <Col md={2}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        to={`/product/${item.product}`}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} =\r\n                                                    ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            <Button onClick={midtransHandler}>MIDTRANS PAY</Button>\r\n                                        </ListGroup.Item> \r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo &&\r\n                                userInfo.isAdmin &&\r\n                                order.isPaid &&\r\n                                !order.isDelivered && (\r\n                                    <ListGroup.Item className=\"d-grid\">\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-block\"\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderScreen;"]},"metadata":{},"sourceType":"module"}