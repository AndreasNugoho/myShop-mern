{"ast":null,"code":"var _jsxFileName = \"D:\\\\udemy\\\\Suppee\\\\frontend\\\\src\\\\screens\\\\OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useParams, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button, Row, Col, ListGroup, Card, Image, Spinner } from \"react-bootstrap\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET, ORDER_DETAILS_RESET } from \"../constants/orderConstants\";\nimport { getOrderDetails, payOrder, deliverOrder, payOrderMidtrans, updatePayOrderMidtrans } from \"../actions/orderActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderScreen = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const dispatch = useDispatch();\n  const match = useParams();\n  const orderId = match.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    orderItems: order,\n    loading,\n    error,\n    success\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = orderPay;\n  const orderMidtrans = useSelector(state => state.orderMidtrans);\n  const {\n    loading: loadingPayMidtrans,\n    success: successPayMidtrans,\n    order: orderPayMidtrans\n  } = orderMidtrans;\n  const orderDeliver = useSelector(state => state.orderDeliver);\n  const {\n    loading: loadingDeliver,\n    success: successDeliver\n  } = orderDeliver;\n\n  const addDecimals = num => {\n    return Math.round(num * 100) / 100;\n  };\n\n  if (!loading) {\n    order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      return history.push(\"/login\");\n    }\n\n    if (!order || order._id !== orderId) {\n      dispatch(getOrderDetails(orderId));\n    } // eslint-disable-next-line\n\n  }, [order, orderId, userInfo, history]);\n  useEffect(() => {\n    if (!order || successPay || successDeliver) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch({\n        type: ORDER_DELIVER_RESET\n      });\n      dispatch({\n        type: ORDER_DETAILS_RESET\n      });\n      dispatch(getOrderDetails(orderId));\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver]);\n  useEffect(() => {\n    const ajaxGetToken = (transactionData, callback) => {\n      var snapToken; // Request get token to your server & save result to snapToken variable\n\n      snapToken = orderPayMidtrans.token;\n\n      if (snapToken) {\n        callback(null, snapToken);\n      } else {\n        callback(new Error(\"Failed to fetch snap token\"), null);\n      }\n    };\n\n    const snap = window.snap;\n    console.log(snap);\n\n    if (successPayMidtrans) {\n      snap.show();\n      ajaxGetToken({\n        \"order_id\": order._id,\n        \"gross_amount\": 50000\n      }, function (error, snapToken) {\n        if (error) {\n          snap.hide();\n        } else {\n          snap.pay(snapToken, {\n            onSuccess: function (result) {\n              console.log(\"success\");\n              console.log(result);\n              return dispatch(updatePayOrderMidtrans(orderId, result));\n            },\n            onPending: function (result) {\n              console.log(\"pending\");\n              console.log(result);\n              return dispatch(updatePayOrderMidtrans(orderId, result));\n            },\n            onError: function (result) {\n              console.log(\"error\");\n              console.log(result);\n              return dispatch(updatePayOrderMidtrans(orderId, result));\n            },\n            onClose: function () {\n              console.log(\"customer closed the popup without finishing the payment\");\n            }\n          });\n        }\n      });\n    }\n  }, [successPayMidtrans, orderPayMidtrans, order, dispatch, orderId]);\n\n  const successPaymentHandler = paymentResult => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(orderId));\n  };\n\n  const midtransHandler = () => {\n    // window.snap.pay('')\n    dispatch(payOrderMidtrans(orderId));\n  };\n\n  function convertToRupiah(angka) {\n    var rupiah = \"\";\n    var angkarev = angka.toString().split(\"\").reverse().join(\"\");\n\n    for (var i = 0; i < angkarev.length; i++) if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + \".\";\n\n    return \"Rp \" + rupiah.split(\"\", rupiah.length - 1).reverse().join(\"\");\n  }\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"ORDER \", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), order.user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), order.user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Address: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), order.shippingAddress.address, \", \", order.shippingAddress.address, \" \", order.shippingAddress.postalCode, \",\", \" \", order.shippingAddress.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Deliver on \", order.deliveredAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: \"Not Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Method: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), order.paymentMethod]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Paid on \", order.paidAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(Card, {\n              className: \"text-center\",\n              style: {\n                width: \"20rem\",\n                margin: \"auto\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: \"Your cart is empty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: \"Make your dreams come true now!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"btn btn-dark my-3\",\n                  to: \"/\",\n                  children: \"Shop Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: order.orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 1,\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: item.image,\n                      alt: item.name,\n                      fluid: true,\n                      rounded: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/products/${item.product}`,\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: [item.qty, \" x Rp \", item.price, \" = Rp\", \" \", item.qty * item.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Order Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: convertToRupiah(order.itemsPrice)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Shipping\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: convertToRupiah(order.shippingPrice)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: convertToRupiah(order.taxPrice)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: convertToRupiah(order.totalPrice)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), userInfo && !order.isPaid && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: midtransHandler,\n                children: \"MIDTRANS PAY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                className: \"btn btn-block\",\n                onClick: deliverHandler,\n                children: loadingDeliver ? /*#__PURE__*/_jsxDEV(Spinner, {\n                  animation: \"border\",\n                  size: \"sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 25\n                }, this) : \"Mark as delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderScreen, \"ZHnMZi9Pr3xvcKVDnGBDqq1g5pQ=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["D:/udemy/Suppee/frontend/src/screens/OrderScreen.js"],"names":["React","useEffect","useState","axios","Link","useParams","Redirect","useSelector","useDispatch","Button","Row","Col","ListGroup","Card","Image","Spinner","PayPalButton","Loader","Message","ORDER_PAY_RESET","ORDER_DELIVER_RESET","ORDER_DETAILS_RESET","getOrderDetails","payOrder","deliverOrder","payOrderMidtrans","updatePayOrderMidtrans","OrderScreen","history","dispatch","match","orderId","id","sdkReady","setSdkReady","userLogin","state","userInfo","orderDetails","orderItems","order","loading","error","success","orderPay","loadingPay","successPay","orderMidtrans","loadingPayMidtrans","successPayMidtrans","orderPayMidtrans","orderDeliver","loadingDeliver","successDeliver","addDecimals","num","Math","round","itemsPrice","reduce","acc","item","price","qty","push","_id","type","ajaxGetToken","transactionData","callback","snapToken","token","Error","snap","window","console","log","show","hide","pay","onSuccess","result","onPending","onError","onClose","successPaymentHandler","paymentResult","deliverHandler","midtransHandler","convertToRupiah","angka","rupiah","angkarev","toString","split","reverse","join","i","length","substr","user","name","email","shippingAddress","address","postalCode","country","isDelivered","deliveredAt","paymentMethod","isPaid","paidAt","width","margin","map","index","image","product","shippingPrice","taxPrice","totalPrice","isAdmin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams,Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Card,\r\n  Image,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_DETAILS_RESET,\r\n} from \"../constants/orderConstants\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n  payOrderMidtrans,\r\n  updatePayOrderMidtrans,\r\n} from \"../actions/orderActions\";\r\n\r\nconst OrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const match = useParams();\r\n  const orderId = match.id;\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { orderItems: order, loading, error, success } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderMidtrans = useSelector((state) => state.orderMidtrans);\r\n  const {\r\n    loading: loadingPayMidtrans,\r\n    success: successPayMidtrans,\r\n    order: orderPayMidtrans,\r\n  } = orderMidtrans;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const addDecimals = (num) => {\r\n    return Math.round(num * 100) / 100;\r\n  };\r\n\r\n  if (!loading) {\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      return history.push(\"/login\");\r\n    }\r\n    if (!order || order._id !== orderId) {\r\n      dispatch(getOrderDetails(orderId));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [order, orderId, userInfo, history]);\r\n\r\n  useEffect(() => {\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch({ type: ORDER_DETAILS_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    }\r\n  }, [dispatch, order, orderId, successPay, successDeliver]);\r\n\r\n  useEffect(() => {\r\n    const ajaxGetToken = (transactionData, callback) => {\r\n      var snapToken;\r\n      // Request get token to your server & save result to snapToken variable\r\n      snapToken = orderPayMidtrans.token;\r\n\r\n      if (snapToken) {\r\n        callback(null, snapToken);\r\n      } else {\r\n        callback(new Error(\"Failed to fetch snap token\"), null);\r\n      }\r\n    };\r\n\r\n    const snap = window.snap;\r\n    console.log(snap);\r\n    if (successPayMidtrans) {\r\n      snap.show();\r\n      ajaxGetToken(\r\n        { \"order_id\": order._id, \"gross_amount\": 50000 },\r\n        function (error, snapToken) {\r\n          if (error) {\r\n            snap.hide();\r\n          } else {\r\n            snap.pay(snapToken, {\r\n              onSuccess: function (result) {\r\n                console.log(\"success\");\r\n                console.log(result);\r\n                return dispatch(updatePayOrderMidtrans(orderId, result));\r\n              },\r\n              onPending: function (result) {\r\n                console.log(\"pending\");\r\n                console.log(result);\r\n                return dispatch(updatePayOrderMidtrans(orderId, result));\r\n              },\r\n              onError: function (result) {\r\n                console.log(\"error\");\r\n                console.log(result);\r\n                return dispatch(updatePayOrderMidtrans(orderId, result));\r\n              },\r\n              onClose: function () {\r\n                console.log(\r\n                  \"customer closed the popup without finishing the payment\"\r\n                );\r\n              },\r\n            });\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }, [successPayMidtrans, orderPayMidtrans, order, dispatch, orderId]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(orderId));\r\n  };\r\n\r\n  const midtransHandler = () => {\r\n    // window.snap.pay('')\r\n    dispatch(payOrderMidtrans(orderId));\r\n  };\r\n\r\n  function convertToRupiah(angka) {\r\n    var rupiah = \"\";\r\n    var angkarev = angka.toString().split(\"\").reverse().join(\"\");\r\n    for (var i = 0; i < angkarev.length; i++)\r\n      if (i % 3 === 0) rupiah += angkarev.substr(i, 3) + \".\";\r\n    return (\r\n      \"Rp \" +\r\n      rupiah\r\n        .split(\"\", rupiah.length - 1)\r\n        .reverse()\r\n        .join(\"\")\r\n    );\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      {/* {successPay && <Redirect to={window.location.href} />} */}\r\n      <h2>ORDER {order._id}</h2>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                {order.user.email}\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.address}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Deliver on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Card\r\n                  className=\"text-center\"\r\n                  style={{ width: \"20rem\", margin: \"auto\" }}\r\n                >\r\n                  <Card.Body>\r\n                    <Card.Title>Your cart is empty</Card.Title>\r\n                    <Card.Text>Make your dreams come true now!</Card.Text>\r\n                    {/* <Button variant=\"primary\">Shop Now</Button> */}\r\n                    <Link className=\"btn btn-dark my-3\" to=\"/\">\r\n                      Shop Now\r\n                    </Link>\r\n                  </Card.Body>\r\n                </Card>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/products/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x Rp {item.price} = Rp{\" \"}\r\n                          {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>{convertToRupiah(order.itemsPrice)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>{convertToRupiah(order.shippingPrice)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>{convertToRupiah(order.taxPrice)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>{convertToRupiah(order.totalPrice)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {userInfo && !order.isPaid && (\r\n                <ListGroup.Item>\r\n                  <Button onClick={midtransHandler}>MIDTRANS PAY</Button>\r\n                </ListGroup.Item>\r\n              )}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      {loadingDeliver ? (\r\n                        <Spinner animation=\"border\" size=\"sm\" />\r\n                      ) : (\r\n                        \"Mark as delivered\"\r\n                      )}\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;"]},"metadata":{},"sourceType":"module"}