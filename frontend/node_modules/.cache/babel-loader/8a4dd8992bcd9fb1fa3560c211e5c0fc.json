{"ast":null,"code":"var _jsxFileName = \"D:\\\\udemy\\\\Suppee\\\\frontend\\\\src\\\\screens\\\\OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport { Col, ListGroup, Row, Image, Card, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { deliverOrder, getOrderDetails, payOrder, payOrderMidtrans, updatePayOrderMidtrans } from \"../actions/orderActions\";\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET, ORDER_DETAILS_RESET } from \"../constants/orderConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderScreen = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const match = useParams();\n  const orderId = match.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = orderPay;\n  const orderDeliver = useSelector(state => state.orderDeliver);\n  const {\n    loading: loadingDeliver,\n    success: successDeliver\n  } = orderDeliver; // useEffect(() => {\n  //     if (!userInfo) {\n  //         navigate(\"/login\");\n  //     }\n  //     const addPayPalScript = async () => {\n  //         const { data: clientId } = await axios.get(\"/api/config/paypal\");\n  //         const script = document.createElement(\"script\");\n  //         script.type = \"text/javascript\";\n  //         script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n  //         script.async = true;\n  //         script.onload = () => {\n  //             setSdkReady(true);\n  //         };\n  //         document.body.appendChild(script);\n  //     };\n  //     // Check if customer has paid the order or the order has been delivered, then\n  //     if (!order || successPay || order._id !== orderId || successDeliver) {\n  //         dispatch({ type: ORDER_PAY_RESET });\n  //         dispatch({ type: ORDER_DELIVER_RESET });\n  //         dispatch(getOrderDetails(orderId));\n  //         // Check if customer hasn't paid the order, then\n  //     } else if (order.isPaid === false) {\n  //         // Check if the page hasn't loaded with paypal, then\n  //         if (!window.paypal) {\n  //             // just add the paypal script (and sdk ready)\n  //             addPayPalScript();\n  //         } else {\n  //             // if page has loaded with paypal, then just set the sdk ready\n  //             setSdkReady(true);\n  //         }\n  //     }\n  // }, [\n  //     dispatch,\n  //     successPay,\n  //     orderId,\n  //     order,\n  //     successDeliver,\n  //     userInfo,\n  //     navigate,\n  // ]);\n\n  useEffect(() => {\n    if (!userInfo) {\n      return history.push(\"/login\");\n    }\n\n    if (!order || order._id !== orderId) {\n      dispatch(getOrderDetails(orderId));\n    } // eslint-disable-next-line\n\n  }, [order, orderId, userInfo, history]);\n  useEffect(() => {\n    if (!order || successPay || successDeliver) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch({\n        type: ORDER_DELIVER_RESET\n      });\n      dispatch({\n        type: ORDER_DETAILS_RESET\n      });\n      dispatch(getOrderDetails(orderId));\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver]);\n  useEffect(() => {\n    const ajaxGetToken = (transactionData, callback) => {\n      var snapToken; // Request get token to your server & save result to snapToken variable\n\n      snapToken = orderPayMidtrans.token;\n\n      if (snapToken) {\n        callback(null, snapToken);\n      } else {\n        callback(new Error(\"Failed to fetch snap token\"), null);\n      }\n    };\n\n    const snap = window.snap;\n    console.log(snap);\n\n    if (successPayMidtrans) {\n      snap.show();\n      ajaxGetToken({\n        \"order_id\": order._id,\n        \"gross_amount\": 50000\n      }, function (error, snapToken) {\n        if (error) {\n          snap.hide();\n        } else {\n          snap.pay(snapToken, {\n            onSuccess: function (result) {\n              console.log(\"success\");\n              console.log(result);\n              return dispatch(updatePayOrderMidtrans(orderId, result));\n            },\n            onPending: function (result) {\n              console.log(\"pending\");\n              console.log(result);\n              return dispatch(updatePayOrderMidtrans(orderId, result));\n            },\n            onError: function (result) {\n              console.log(\"error\");\n              console.log(result);\n              return dispatch(updatePayOrderMidtrans(orderId, result));\n            },\n            onClose: function () {\n              console.log(\"customer closed the popup without finishing the payment\");\n            }\n          });\n        }\n      });\n    }\n  }, [successPayMidtrans, orderPayMidtrans, order, dispatch, orderId]);\n\n  const successPaymentHandler = paymentResult => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  const midtransHandler = () => {\n    // window.snap.pay('')\n    dispatch(payOrderMidtrans(orderId));\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Order \", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), \" \", order.user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `mailto:${order.user.email}`,\n                children: order.user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Address: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), order.shippingAddress.address, \" \", order.shippingAddress.city, \",\", \" \", order.shippingAddress.postalCode, \",\", \" \", order.shippingAddress.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Delivered on \", order.deliveredAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: \"Not Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Method: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), order.paymentMethod]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Paid on \", order.paidAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n              children: \"Order is empty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: order.orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 2,\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: item.image,\n                      alt: item.name,\n                      fluid: true,\n                      rounded: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/product/${item.product}`,\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: [item.qty, \" x $\", item.price, \" = $\", item.qty * item.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Order Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.itemsPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Shipping\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.shippingPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.taxPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.totalPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this), !order.isPaid && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: successPaymentHandler,\n                children: \"MIDTRANS PAY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 41\n            }, this), loadingDeliver && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 48\n            }, this), userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"d-grid\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                className: \"btn btn-block\",\n                onClick: deliverHandler,\n                children: \"Mark As Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderScreen, \"v29CYrdY7PlUafETi2WH02CZHag=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["D:/udemy/Suppee/frontend/src/screens/OrderScreen.js"],"names":["React","useEffect","useState","axios","PayPalButton","Link","useParams","useNavigate","Col","ListGroup","Row","Image","Card","Button","useDispatch","useSelector","Message","Loader","deliverOrder","getOrderDetails","payOrder","payOrderMidtrans","updatePayOrderMidtrans","ORDER_PAY_RESET","ORDER_DELIVER_RESET","ORDER_DETAILS_RESET","OrderScreen","history","dispatch","navigate","match","orderId","id","sdkReady","setSdkReady","userLogin","state","userInfo","orderDetails","order","loading","error","orderPay","loadingPay","success","successPay","orderDeliver","loadingDeliver","successDeliver","push","_id","type","ajaxGetToken","transactionData","callback","snapToken","orderPayMidtrans","token","Error","snap","window","console","log","successPayMidtrans","show","hide","pay","onSuccess","result","onPending","onError","onClose","successPaymentHandler","paymentResult","deliverHandler","midtransHandler","user","name","email","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","isPaid","paidAt","orderItems","length","map","item","index","image","product","qty","price","itemsPrice","shippingPrice","taxPrice","totalPrice","isAdmin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { Col, ListGroup, Row, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n    deliverOrder,\r\n    getOrderDetails,\r\n    payOrder,\r\n    payOrderMidtrans,\r\n    updatePayOrderMidtrans,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n    ORDER_PAY_RESET,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_DETAILS_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const match = useParams();\r\n    const orderId = match.id;\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const orderPay = useSelector((state) => state.orderPay);\r\n    const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver);\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n    // useEffect(() => {\r\n    //     if (!userInfo) {\r\n    //         navigate(\"/login\");\r\n    //     }\r\n\r\n    //     const addPayPalScript = async () => {\r\n    //         const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n    //         const script = document.createElement(\"script\");\r\n    //         script.type = \"text/javascript\";\r\n    //         script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n    //         script.async = true;\r\n    //         script.onload = () => {\r\n    //             setSdkReady(true);\r\n    //         };\r\n    //         document.body.appendChild(script);\r\n    //     };\r\n\r\n    //     // Check if customer has paid the order or the order has been delivered, then\r\n    //     if (!order || successPay || order._id !== orderId || successDeliver) {\r\n    //         dispatch({ type: ORDER_PAY_RESET });\r\n    //         dispatch({ type: ORDER_DELIVER_RESET });\r\n    //         dispatch(getOrderDetails(orderId));\r\n    //         // Check if customer hasn't paid the order, then\r\n    //     } else if (order.isPaid === false) {\r\n    //         // Check if the page hasn't loaded with paypal, then\r\n    //         if (!window.paypal) {\r\n    //             // just add the paypal script (and sdk ready)\r\n    //             addPayPalScript();\r\n    //         } else {\r\n    //             // if page has loaded with paypal, then just set the sdk ready\r\n    //             setSdkReady(true);\r\n    //         }\r\n    //     }\r\n    // }, [\r\n    //     dispatch,\r\n    //     successPay,\r\n    //     orderId,\r\n    //     order,\r\n    //     successDeliver,\r\n    //     userInfo,\r\n    //     navigate,\r\n    // ]);\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n          return history.push(\"/login\");\r\n        }\r\n        if (!order || order._id !== orderId) {\r\n          dispatch(getOrderDetails(orderId));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [order, orderId, userInfo, history]);\r\n    \r\n    useEffect(() => {\r\n        if (!order || successPay || successDeliver) {\r\n          dispatch({ type: ORDER_PAY_RESET });\r\n          dispatch({ type: ORDER_DELIVER_RESET });\r\n          dispatch({ type: ORDER_DETAILS_RESET });\r\n          dispatch(getOrderDetails(orderId));\r\n        }\r\n      }, [dispatch, order, orderId, successPay, successDeliver]);\r\n\r\n      useEffect(() => {\r\n        const ajaxGetToken = (transactionData, callback) => {\r\n          var snapToken;\r\n          // Request get token to your server & save result to snapToken variable\r\n          snapToken = orderPayMidtrans.token;\r\n    \r\n          if (snapToken) {\r\n            callback(null, snapToken);\r\n          } else {\r\n            callback(new Error(\"Failed to fetch snap token\"), null);\r\n          }\r\n        };\r\n    \r\n        const snap = window.snap;\r\n        console.log(snap);\r\n        if (successPayMidtrans) {\r\n          snap.show();\r\n          ajaxGetToken(\r\n            { \"order_id\": order._id, \"gross_amount\": 50000 },\r\n            function (error, snapToken) {\r\n              if (error) {\r\n                snap.hide();\r\n              } else {\r\n                snap.pay(snapToken, {\r\n                  onSuccess: function (result) {\r\n                    console.log(\"success\");\r\n                    console.log(result);\r\n                    return dispatch(updatePayOrderMidtrans(orderId, result));\r\n                  },\r\n                  onPending: function (result) {\r\n                    console.log(\"pending\");\r\n                    console.log(result);\r\n                    return dispatch(updatePayOrderMidtrans(orderId, result));\r\n                  },\r\n                  onError: function (result) {\r\n                    console.log(\"error\");\r\n                    console.log(result);\r\n                    return dispatch(updatePayOrderMidtrans(orderId, result));\r\n                  },\r\n                  onClose: function () {\r\n                    console.log(\r\n                      \"customer closed the popup without finishing the payment\"\r\n                    );\r\n                  },\r\n                });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }, [successPayMidtrans, orderPayMidtrans, order, dispatch, orderId]);\r\n    \r\n    \r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult));\r\n    };\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order));\r\n    };\r\n\r\n    const midtransHandler = () => {\r\n        // window.snap.pay('')\r\n        dispatch(payOrderMidtrans(orderId));\r\n    };\r\n    \r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n    ) : (\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong>\r\n                                <a href={`mailto:${order.user.email}`}>\r\n                                    {order.user.email}\r\n                                </a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address}{\" \"}\r\n                                {order.shippingAddress.city},{\" \"}\r\n                                {order.shippingAddress.postalCode},{\" \"}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant=\"success\">\r\n                                    Delivered on {order.deliveredAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant=\"danger\">\r\n                                    Not Delivered\r\n                                </Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant=\"success\">\r\n                                    Paid on {order.paidAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant=\"danger\">Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? (\r\n                                <Message>Order is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row className=\"align-items-center\">\r\n                                                <Col md={2}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        to={`/product/${item.product}`}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} =\r\n                                                    ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                                    {/* {order.paymentMethod === 'PayPal' ? (\r\n                                        <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                                    ) : (\r\n                                            <ListGroup.Item>\r\n                                                <Button onClick={successPaymentHandler}>MIDTRANS PAY</Button>\r\n                                            </ListGroup.Item>\r\n                                    )} */}\r\n                            {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            <Button onClick={successPaymentHandler}>MIDTRANS PAY</Button>\r\n                                        </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo &&\r\n                                userInfo.isAdmin &&\r\n                                order.isPaid &&\r\n                                !order.isDelivered && (\r\n                                    <ListGroup.Item className=\"d-grid\">\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-block\"\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderScreen;\r\n"]},"metadata":{},"sourceType":"module"}